import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class MessageEncrypter {

    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

        int countOfLines = Integer.parseInt(reader.readLine());

        Pattern pattern = Pattern.compile("[.]?([*@])[A-Z][a-z]{2,}\\1: (\\[[A-Za-z]\\]\\|){3}$");

        for (int i = 1; i <= countOfLines; i++) {
            String line = reader.readLine();

            Matcher matcher = pattern.matcher(line);

            if (!matcher.find()) {
                System.out.println("Valid message not found!");
            } else {
                String message = matcher.group();
                System.out.println(encryptMessage(message));
            }
        }
    }

    private static String encryptMessage(String message) {
        StringBuilder sb = new StringBuilder();

        char symbol = message.charAt(0);
        message = message.replaceAll(String.format("[%c]", symbol), "");
        message = message.replaceAll("[\\[\\]]", "");
        message = message.replaceAll("\\|", " ");

        int indexOfColon = message.indexOf(":");

        sb.append(message.substring(0, indexOfColon + 1));

        for (int i = indexOfColon + 1; i < message.length(); i++) {
            if (message.charAt(i) != ' '){
               sb.append((int) message.charAt(i));
            } else {
                sb.append(" ");
            }
        }
        return sb.toString().trim();
    }
}
